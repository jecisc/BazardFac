(* 'M'odule plateau du 'T''P'8 d''A''P''I'2
'F'erlicot 'D'elbecque 'C'yril *)

open Random;;
open Printf;;

type t = char array;;

let choix=[| [|'E'; 'T'; 'U'; 'K'; 'N'; 'O' |] ; [| 'E'; 'V'; 'G'; 'T'; 'I'; 'N' |];[| 'D'; 'E'; 'C'; 'A'; 'M'; 'P' |] ; [| 'I'; 'E'; 'L'; 'R'; 'U'; 'W' |]; [|'E'; 'H'; 'I'; 'F'; 'S'; 'E' |] ; [|'R'; 'E'; 'C'; 'A'; 'L'; 'S' |] ;[|'E'; 'N'; 'T'; 'D'; 'O'; 'S' |] ;[|'O'; 'F'; 'X'; 'R'; 'I'; 'A'  |] ; [|'N'; 'A'; 'V'; 'E'; 'D'; 'Z' |] ; [| 'E'; 'I'; 'O'; 'A'; 'T'; 'A' |]; [| 'G'; 'L'; 'E'; 'N'; 'Y'; 'U' |];[|'B'; 'M'; 'A'; 'Q'; 'J'; 'O'  |]; [|'T'; 'L'; 'I'; 'B'; 'R'; 'A' |] ;[|'S'; 'P'; 'U'; 'L'; 'T'; 'E' |]; [| 'A'; 'I'; 'M'; 'S'; 'O'; 'R' |] ; [| 'E'; 'N'; 'H'; 'R'; 'I'; 'S'|] |];;

Random.self_init();;

let tab_alea() =
	let t = [| 0;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15|] in 
		for i = 0 to 15 do
			let a = Random.int 16 and aux = t.(i) in
				t.(i) <- t.(a);
				t.(a) <- aux;
		done;
	t;;

let creer () = 
	let p = Array.make 16 'A' and t = tab_alea() in
		for i = 0 to 15 do
			let r = Random.int 6 in
			p.(i) <- choix.(t.(i)).(r);
			
		done;
	p;;

let case p i j =
	let ind = ref i in
		ind := !ind + 4 * (j-1);
		ind := !ind -1;
	p.(!ind);;

let voisine i j =
	let l = [] in
		match i,j with
		| 1, 1 ->   (1,2)::(2,1)::(2,2)::l
		| 1, 2 ->   (1,1)::(1,3)::(2,1)::(2,2)::(2,3)::l
		| 1, 3 ->   (1,2)::(1,4)::(2,2)::(2,3)::(2,4)::l
		| 1, 4 ->   (1,3)::(2,3)::(2,4)::l
		| 2, 1 ->   (1,1)::(1,2)::(2,2)::(3,1)::(3,2)::l
		| 2, 2 ->   (1,1)::(1,2)::(1,3)::(2,1)::(2,3)::(3,1)::(3,2)::(3,3)::l
		| 2, 3 ->   (1,2)::(1,3)::(1,4)::(2,2)::(2,4)::(3,2)::(3,3)::(3,4)::l
		| 2, 4 ->   (1,3)::(1,4)::(2,3)::(3,3)::(3,4)::l
		| 3, 1 ->   (2,1)::(2,2)::(3,2)::(4,1)::(4,2)::l
		| 3, 2 ->   (2,1)::(2,2)::(2,3)::(3,1)::(3,3)::(4,1)::(4,2)::(4,3)::l
		| 3, 3 ->   (2,2)::(2,3)::(2,4)::(3,2)::(3,4)::(4,2)::(4,3)::(4,4)::l
		| 3, 4 ->   (2,3)::(2,4)::(3,3)::(4,3)::(4,4)::l
		| 4, 1 ->   (3,1)::(3,2)::(4,2)::l
		| 4, 2 ->   (3,1)::(3,2)::(3,3)::(4,1)::(4,3)::l
		| 4, 3 ->   (3,2)::(3,3)::(3,4)::(4,2)::(4,4)::l
		| 4, 4 ->   (3,3)::(3,4)::(4,3)::l
		|_,_ -> failwith "Cases non existante";;

let imprimer p=
	for i = 1 to 4 do 
		printf "+---+---+---+---+\n";
		printf "| %c | %c | %c | %c |\n"
		(case p i 1)
		(case p i 2)
		(case p i 3)
		(case p i 4);
	done;
	printf "+---+---+---+---+\n";;















































